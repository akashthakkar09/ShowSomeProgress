//
//  ActivityStyleKit.swift
//  ShowSomeProgress
//
//  Created by Alexander Kasimir on 06.08.19.
//  Copyright Â© 2019 Alexander Kasimir. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class ActivityStyleKit : NSObject {

    //// Drawing Methods

    @objc dynamic public class func drawOrbitIndicator(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 78, height: 78), resizing: ResizingBehavior = .aspectFit, animationProgress: CGFloat = 0, progressColorRed: CGFloat = 0, progressColorGreen: CGFloat = 0.475, progressColorBlue: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 78, height: 78), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 78, y: resizedFrame.height / 78)



        //// Variable Declarations
        let rotationOnce: CGFloat = 360 * animationProgress
        let rotationTwice: CGFloat = 360 * 2 * animationProgress
        let rotationThrice: CGFloat = 360 * 3 * animationProgress
        let progressBarColor = UIColor(red: progressColorRed, green: progressColorGreen, blue: progressColorBlue, alpha: 1)

        //// Outer Drawing
        context.saveGState()
        context.translateBy(x: 38.5, y: 38.5)
        context.rotate(by: -rotationOnce * CGFloat.pi/180)

        let outerPath = UIBezierPath(ovalIn: CGRect(x: -3.57, y: -33.42, width: 7, height: 7))
        progressBarColor.setFill()
        outerPath.fill()

        context.restoreGState()


        //// Middle Drawing
        context.saveGState()
        context.translateBy(x: 38.5, y: 38.5)
        context.rotate(by: -rotationTwice * CGFloat.pi/180)

        let middlePath = UIBezierPath(ovalIn: CGRect(x: -3.5, y: -23.5, width: 7, height: 7))
        progressBarColor.setFill()
        middlePath.fill()

        context.restoreGState()


        //// Inner Drawing
        context.saveGState()
        context.translateBy(x: 38.5, y: 38.5)
        context.rotate(by: -rotationThrice * CGFloat.pi/180)

        let innerPath = UIBezierPath(ovalIn: CGRect(x: -3.5, y: -13.5, width: 7, height: 7))
        progressBarColor.setFill()
        innerPath.fill()

        context.restoreGState()


        //// Group
        //// OuterRing Drawing
        let outerRingPath = UIBezierPath(ovalIn: CGRect(x: 8.5, y: 8.5, width: 60, height: 60))
        progressBarColor.setStroke()
        outerRingPath.lineWidth = 1
        outerRingPath.stroke()


        //// MiddleRing Drawing
        let middleRingPath = UIBezierPath(ovalIn: CGRect(x: 18.5, y: 18.5, width: 40, height: 40))
        progressBarColor.setStroke()
        middleRingPath.lineWidth = 1
        middleRingPath.stroke()


        //// InnerRing Drawing
        let innerRingPath = UIBezierPath(ovalIn: CGRect(x: 28.5, y: 28.5, width: 20, height: 20))
        progressBarColor.setStroke()
        innerRingPath.lineWidth = 1
        innerRingPath.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOrbitIndicator2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 78, height: 78), resizing: ResizingBehavior = .aspectFit, animationProgress: CGFloat = 0, progressColorRed: CGFloat = 0, progressColorGreen: CGFloat = 0.475, progressColorBlue: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 78, height: 78), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 78, y: resizedFrame.height / 78)



        //// Variable Declarations
        let rotationOnce: CGFloat = 360 * animationProgress
        let rotationTwice: CGFloat = 360 * 2 * animationProgress
        let rotationThrice: CGFloat = 360 * 3 * animationProgress
        let progressBarColor = UIColor(red: progressColorRed, green: progressColorGreen, blue: progressColorBlue, alpha: 1)

        //// Outer Drawing
        context.saveGState()
        context.translateBy(x: 39.01, y: 38.89)
        context.rotate(by: -rotationOnce * CGFloat.pi/180)

        let outerPath = UIBezierPath(ovalIn: CGRect(x: -3.52, y: -36.26, width: 7, height: 7))
        progressBarColor.setFill()
        outerPath.fill()

        context.restoreGState()


        //// Inner Drawing
        context.saveGState()
        context.translateBy(x: 39.01, y: 38.89)
        context.rotate(by: -rotationThrice * CGFloat.pi/180)

        let innerPath = UIBezierPath(ovalIn: CGRect(x: -2.51, y: -14.52, width: 5, height: 5))
        progressBarColor.setFill()
        innerPath.fill()

        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: 39.01, y: 38.89)
        context.rotate(by: -rotationTwice * CGFloat.pi/180)



        //// Middle Drawing
        context.saveGState()
        context.translateBy(x: 0.02, y: -0.26)
        context.rotate(by: -720 * CGFloat.pi/180)

        let middlePath = UIBezierPath(ovalIn: CGRect(x: -2.5, y: -22.5, width: 5, height: 5))
        progressBarColor.setFill()
        middlePath.fill()

        context.restoreGState()


        //// Moon Drawing
        context.saveGState()
        context.translateBy(x: 0.1, y: -20.38)
        context.rotate(by: -rotationThrice * CGFloat.pi/180)

        let moonPath = UIBezierPath(ovalIn: CGRect(x: -1.14, y: -5.47, width: 2, height: 2))
        progressBarColor.setFill()
        moonPath.fill()

        context.restoreGState()



        context.restoreGState()


        //// Center Drawing
        let centerPath = UIBezierPath(ovalIn: CGRect(x: 34.5, y: 34.5, width: 9, height: 9))
        progressBarColor.setFill()
        centerPath.fill()


        //// Group
        //// OuterRing Drawing
        let outerRingPath = UIBezierPath(ovalIn: CGRect(x: 5.9, y: 6.29, width: 66.12, height: 65.62))
        progressBarColor.setStroke()
        outerRingPath.lineWidth = 1
        outerRingPath.stroke()


        //// MiddleRing Drawing
        let middleRingPath = UIBezierPath(ovalIn: CGRect(x: 18.47, y: 18.66, width: 40.87, height: 40.87))
        progressBarColor.setStroke()
        middleRingPath.lineWidth = 1
        middleRingPath.stroke()


        //// InnerRing Drawing
        let innerRingPath = UIBezierPath(ovalIn: CGRect(x: 27, y: 27, width: 24, height: 24))
        progressBarColor.setStroke()
        innerRingPath.lineWidth = 1
        innerRingPath.stroke()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawOrbitIndicator3(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 78, height: 78), resizing: ResizingBehavior = .aspectFit, animationProgress: CGFloat = 0, progressColorRed: CGFloat = 0, progressColorGreen: CGFloat = 0.475, progressColorBlue: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 78, height: 78), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 78, y: resizedFrame.height / 78)



        //// Variable Declarations
        let rotationOnce: CGFloat = 360 * animationProgress
        let rotationTwice: CGFloat = 360 * 2 * animationProgress
        let rotationThrice: CGFloat = 360 * 3 * animationProgress
        let progressBarColor = UIColor(red: progressColorRed, green: progressColorGreen, blue: progressColorBlue, alpha: 1)

        //// OuterRing Drawing
        let outerRingPath = UIBezierPath(ovalIn: CGRect(x: 9, y: 8.5, width: 60, height: 60))
        progressBarColor.setStroke()
        outerRingPath.lineWidth = 2
        outerRingPath.stroke()


        //// Outer Drawing
        context.saveGState()
        context.translateBy(x: 38.5, y: 38.5)
        context.rotate(by: -rotationOnce * CGFloat.pi/180)

        let outerPath = UIBezierPath(ovalIn: CGRect(x: -2.78, y: -33.3, width: 7, height: 7))
        progressBarColor.setFill()
        outerPath.fill()

        context.restoreGState()


        //// Outer 2 Drawing
        context.saveGState()
        context.translateBy(x: 38.5, y: 38.5)
        context.rotate(by: -rotationTwice * CGFloat.pi/180)

        let outer2Path = UIBezierPath(ovalIn: CGRect(x: -2.78, y: -33.3, width: 7, height: 7))
        progressBarColor.setFill()
        outer2Path.fill()

        context.restoreGState()


        //// Outer 3 Drawing
        context.saveGState()
        context.translateBy(x: 38.5, y: 38.5)
        context.rotate(by: -rotationThrice * CGFloat.pi/180)

        let outer3Path = UIBezierPath(ovalIn: CGRect(x: -2.78, y: -33.3, width: 7, height: 7))
        progressBarColor.setFill()
        outer3Path.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawTripleGears(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 177), resizing: ResizingBehavior = .aspectFit, animationProgress: CGFloat = 0, progressColorRed: CGFloat = 0, progressColorGreen: CGFloat = 0.475, progressColorBlue: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 168, height: 177), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 168, y: resizedFrame.height / 177)



        //// Variable Declarations
        let gear1Rotation: CGFloat = animationProgress * 360 * 2
        let gear2Rotation: CGFloat = -(animationProgress * 360)
        let progressBarColor = UIColor(red: progressColorRed, green: progressColorGreen, blue: progressColorBlue, alpha: 1)

        //// Bezier 4 Drawing
        context.saveGState()
        context.translateBy(x: 104.75, y: 85.21)
        context.rotate(by: -gear2Rotation * CGFloat.pi/180)

        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -7.57, y: -45.69))
        bezier4Path.addCurve(to: CGPoint(x: -7.4, y: -51.36), controlPoint1: CGPoint(x: -7.95, y: -47.19), controlPoint2: CGPoint(x: -8.12, y: -49.34))
        bezier4Path.addCurve(to: CGPoint(x: -2.96, y: -60.62), controlPoint1: CGPoint(x: -6.12, y: -55.01), controlPoint2: CGPoint(x: -5.2, y: -57.65))
        bezier4Path.addLine(to: CGPoint(x: -0.52, y: -60.65))
        bezier4Path.addCurve(to: CGPoint(x: 4.55, y: -51.07), controlPoint1: CGPoint(x: 1.75, y: -57.47), controlPoint2: CGPoint(x: 3.73, y: -53.79))
        bezier4Path.addCurve(to: CGPoint(x: 4.8, y: -46.06), controlPoint1: CGPoint(x: 4.97, y: -49.69), controlPoint2: CGPoint(x: 5.06, y: -47.81))
        bezier4Path.addCurve(to: CGPoint(x: 10.29, y: -45.14), controlPoint1: CGPoint(x: 6.67, y: -45.86), controlPoint2: CGPoint(x: 8.49, y: -45.55))
        bezier4Path.addCurve(to: CGPoint(x: 12.59, y: -50.38), controlPoint1: CGPoint(x: 10.49, y: -46.67), controlPoint2: CGPoint(x: 11.14, y: -48.76))
        bezier4Path.addCurve(to: CGPoint(x: 20.21, y: -57.26), controlPoint1: CGPoint(x: 15.16, y: -53.27), controlPoint2: CGPoint(x: 17, y: -55.36))
        bezier4Path.addLine(to: CGPoint(x: 22.48, y: -56.35))
        bezier4Path.addCurve(to: CGPoint(x: 23.54, y: -45.55), controlPoint1: CGPoint(x: 23.37, y: -52.54), controlPoint2: CGPoint(x: 23.81, y: -48.38))
        bezier4Path.addCurve(to: CGPoint(x: 21.84, y: -40.76), controlPoint1: CGPoint(x: 23.4, y: -44.1), controlPoint2: CGPoint(x: 22.76, y: -42.3))
        bezier4Path.addCurve(to: CGPoint(x: 26.71, y: -37.71), controlPoint1: CGPoint(x: 23.53, y: -39.85), controlPoint2: CGPoint(x: 25.16, y: -38.82))
        bezier4Path.addCurve(to: CGPoint(x: 30.89, y: -41.73), controlPoint1: CGPoint(x: 27.48, y: -39.05), controlPoint2: CGPoint(x: 28.9, y: -40.77))
        bezier4Path.addCurve(to: CGPoint(x: 40.55, y: -45.15), controlPoint1: CGPoint(x: 34.37, y: -43.4), controlPoint2: CGPoint(x: 36.87, y: -44.62))
        bezier4Path.addLine(to: CGPoint(x: 42.3, y: -43.43))
        bezier4Path.addCurve(to: CGPoint(x: 39.15, y: -33.05), controlPoint1: CGPoint(x: 41.67, y: -39.57), controlPoint2: CGPoint(x: 40.49, y: -35.56))
        bezier4Path.addCurve(to: CGPoint(x: 35.69, y: -29.25), controlPoint1: CGPoint(x: 38.46, y: -31.75), controlPoint2: CGPoint(x: 37.15, y: -30.31))
        bezier4Path.addCurve(to: CGPoint(x: 39.02, y: -24.57), controlPoint1: CGPoint(x: 36.89, y: -27.76), controlPoint2: CGPoint(x: 38.01, y: -26.2))
        bezier4Path.addCurve(to: CGPoint(x: 44.46, y: -26.72), controlPoint1: CGPoint(x: 40.24, y: -25.53), controlPoint2: CGPoint(x: 42.23, y: -26.6))
        bezier4Path.addCurve(to: CGPoint(x: 54.69, y: -26.16), controlPoint1: CGPoint(x: 48.31, y: -26.93), controlPoint2: CGPoint(x: 51.09, y: -27.1))
        bezier4Path.addLine(to: CGPoint(x: 55.65, y: -23.91))
        bezier4Path.addCurve(to: CGPoint(x: 48.78, y: -15.53), controlPoint1: CGPoint(x: 53.59, y: -20.58), controlPoint2: CGPoint(x: 50.97, y: -17.34))
        bezier4Path.addCurve(to: CGPoint(x: 44.09, y: -13.34), controlPoint1: CGPoint(x: 47.63, y: -14.59), controlPoint2: CGPoint(x: 45.86, y: -13.76))
        bezier4Path.addCurve(to: CGPoint(x: 45.39, y: -7.71), controlPoint1: CGPoint(x: 44.64, y: -11.51), controlPoint2: CGPoint(x: 45.07, y: -9.63))
        bezier4Path.addCurve(to: CGPoint(x: 51.26, y: -7.61), controlPoint1: CGPoint(x: 46.88, y: -8.13), controlPoint2: CGPoint(x: 49.14, y: -8.36))
        bezier4Path.addCurve(to: CGPoint(x: 60.5, y: -3.15), controlPoint1: CGPoint(x: 54.9, y: -6.32), controlPoint2: CGPoint(x: 57.53, y: -5.4))
        bezier4Path.addLine(to: CGPoint(x: 60.52, y: -0.71))
        bezier4Path.addCurve(to: CGPoint(x: 50.97, y: 4.38), controlPoint1: CGPoint(x: 57.35, y: 1.57), controlPoint2: CGPoint(x: 53.68, y: 3.56))
        bezier4Path.addCurve(to: CGPoint(x: 45.77, y: 4.6), controlPoint1: CGPoint(x: 49.54, y: 4.82), controlPoint2: CGPoint(x: 47.57, y: 4.9))
        bezier4Path.addCurve(to: CGPoint(x: 44.87, y: 10.12), controlPoint1: CGPoint(x: 45.58, y: 6.47), controlPoint2: CGPoint(x: 45.28, y: 8.31))
        bezier4Path.addCurve(to: CGPoint(x: 50.29, y: 12.45), controlPoint1: CGPoint(x: 46.42, y: 10.29), controlPoint2: CGPoint(x: 48.6, y: 10.94))
        bezier4Path.addCurve(to: CGPoint(x: 57.14, y: 20.09), controlPoint1: CGPoint(x: 53.16, y: 15.03), controlPoint2: CGPoint(x: 55.24, y: 16.88))
        bezier4Path.addLine(to: CGPoint(x: 56.24, y: 22.37))
        bezier4Path.addCurve(to: CGPoint(x: 45.47, y: 23.43), controlPoint1: CGPoint(x: 52.44, y: 23.26), controlPoint2: CGPoint(x: 48.29, y: 23.71))
        bezier4Path.addCurve(to: CGPoint(x: 40.58, y: 21.65), controlPoint1: CGPoint(x: 43.98, y: 23.29), controlPoint2: CGPoint(x: 42.13, y: 22.62))
        bezier4Path.addCurve(to: CGPoint(x: 37.53, y: 26.58), controlPoint1: CGPoint(x: 39.66, y: 23.36), controlPoint2: CGPoint(x: 38.65, y: 25))
        bezier4Path.addCurve(to: CGPoint(x: 41.64, y: 30.82), controlPoint1: CGPoint(x: 38.89, y: 27.33), controlPoint2: CGPoint(x: 40.66, y: 28.77))
        bezier4Path.addCurve(to: CGPoint(x: 45.04, y: 40.52), controlPoint1: CGPoint(x: 43.31, y: 34.31), controlPoint2: CGPoint(x: 44.53, y: 36.82))
        bezier4Path.addLine(to: CGPoint(x: 43.34, y: 42.27))
        bezier4Path.addCurve(to: CGPoint(x: 32.99, y: 39.1), controlPoint1: CGPoint(x: 39.49, y: 41.63), controlPoint2: CGPoint(x: 35.49, y: 40.44))
        bezier4Path.addCurve(to: CGPoint(x: 29.16, y: 35.58), controlPoint1: CGPoint(x: 31.68, y: 38.4), controlPoint2: CGPoint(x: 30.23, y: 37.07))
        bezier4Path.addCurve(to: CGPoint(x: 24.42, y: 39.02), controlPoint1: CGPoint(x: 27.66, y: 36.83), controlPoint2: CGPoint(x: 26.07, y: 37.97))
        bezier4Path.addCurve(to: CGPoint(x: 26.56, y: 44.49), controlPoint1: CGPoint(x: 25.37, y: 40.24), controlPoint2: CGPoint(x: 26.44, y: 42.24))
        bezier4Path.addCurve(to: CGPoint(x: 25.97, y: 54.76), controlPoint1: CGPoint(x: 26.75, y: 48.36), controlPoint2: CGPoint(x: 26.91, y: 51.14))
        bezier4Path.addLine(to: CGPoint(x: 23.72, y: 55.71))
        bezier4Path.addCurve(to: CGPoint(x: 15.39, y: 48.79), controlPoint1: CGPoint(x: 20.41, y: 53.64), controlPoint2: CGPoint(x: 17.18, y: 50.99))
        bezier4Path.addCurve(to: CGPoint(x: 13.22, y: 44.12), controlPoint1: CGPoint(x: 14.45, y: 47.64), controlPoint2: CGPoint(x: 13.64, y: 45.88))
        bezier4Path.addCurve(to: CGPoint(x: 7.76, y: 45.41), controlPoint1: CGPoint(x: 11.44, y: 44.66), controlPoint2: CGPoint(x: 9.62, y: 45.09))
        bezier4Path.addCurve(to: CGPoint(x: 7.63, y: 51.24), controlPoint1: CGPoint(x: 8.16, y: 46.91), controlPoint2: CGPoint(x: 8.37, y: 49.14))
        bezier4Path.addCurve(to: CGPoint(x: 3.19, y: 60.5), controlPoint1: CGPoint(x: 6.35, y: 54.89), controlPoint2: CGPoint(x: 5.44, y: 57.52))
        bezier4Path.addLine(to: CGPoint(x: 0.75, y: 60.52))
        bezier4Path.addCurve(to: CGPoint(x: -4.32, y: 50.94), controlPoint1: CGPoint(x: -1.52, y: 57.34), controlPoint2: CGPoint(x: -3.5, y: 53.66))
        bezier4Path.addCurve(to: CGPoint(x: -4.56, y: 45.85), controlPoint1: CGPoint(x: -4.75, y: 49.54), controlPoint2: CGPoint(x: -4.84, y: 47.62))
        bezier4Path.addCurve(to: CGPoint(x: -10.05, y: 44.98), controlPoint1: CGPoint(x: -6.42, y: 45.67), controlPoint2: CGPoint(x: -8.26, y: 45.38))
        bezier4Path.addCurve(to: CGPoint(x: -12.36, y: 50.26), controlPoint1: CGPoint(x: -10.25, y: 46.51), controlPoint2: CGPoint(x: -10.9, y: 48.62))
        bezier4Path.addCurve(to: CGPoint(x: -19.98, y: 57.13), controlPoint1: CGPoint(x: -14.93, y: 53.14), controlPoint2: CGPoint(x: -16.77, y: 55.23))
        bezier4Path.addLine(to: CGPoint(x: -22.24, y: 56.22))
        bezier4Path.addCurve(to: CGPoint(x: -23.31, y: 45.43), controlPoint1: CGPoint(x: -23.14, y: 52.41), controlPoint2: CGPoint(x: -23.58, y: 48.26))
        bezier4Path.addCurve(to: CGPoint(x: -21.63, y: 40.69), controlPoint1: CGPoint(x: -23.17, y: 43.99), controlPoint2: CGPoint(x: -22.54, y: 42.21))
        bezier4Path.addCurve(to: CGPoint(x: -26.53, y: 37.66), controlPoint1: CGPoint(x: -23.33, y: 39.78), controlPoint2: CGPoint(x: -24.97, y: 38.77))
        bezier4Path.addCurve(to: CGPoint(x: -30.66, y: 41.6), controlPoint1: CGPoint(x: -27.31, y: 39), controlPoint2: CGPoint(x: -28.71, y: 40.66))
        bezier4Path.addCurve(to: CGPoint(x: -40.32, y: 45.02), controlPoint1: CGPoint(x: -34.13, y: 43.28), controlPoint2: CGPoint(x: -36.63, y: 44.5))
        bezier4Path.addLine(to: CGPoint(x: -42.07, y: 43.31))
        bezier4Path.addCurve(to: CGPoint(x: -38.92, y: 32.93), controlPoint1: CGPoint(x: -41.44, y: 39.45), controlPoint2: CGPoint(x: -40.25, y: 35.44))
        bezier4Path.addCurve(to: CGPoint(x: -35.6, y: 29.23), controlPoint1: CGPoint(x: -38.25, y: 31.67), controlPoint2: CGPoint(x: -37, y: 30.28))
        bezier4Path.addCurve(to: CGPoint(x: -38.96, y: 24.58), controlPoint1: CGPoint(x: -36.81, y: 27.75), controlPoint2: CGPoint(x: -37.94, y: 26.2))
        bezier4Path.addCurve(to: CGPoint(x: -44.23, y: 26.59), controlPoint1: CGPoint(x: -40.19, y: 25.5), controlPoint2: CGPoint(x: -42.1, y: 26.48))
        bezier4Path.addCurve(to: CGPoint(x: -54.46, y: 26.04), controlPoint1: CGPoint(x: -48.08, y: 26.8), controlPoint2: CGPoint(x: -50.86, y: 26.97))
        bezier4Path.addLine(to: CGPoint(x: -55.42, y: 23.78))
        bezier4Path.addCurve(to: CGPoint(x: -48.55, y: 15.41), controlPoint1: CGPoint(x: -53.36, y: 20.46), controlPoint2: CGPoint(x: -50.74, y: 17.21))
        bezier4Path.addCurve(to: CGPoint(x: -44.13, y: 13.28), controlPoint1: CGPoint(x: -47.46, y: 14.51), controlPoint2: CGPoint(x: -45.81, y: 13.72))
        bezier4Path.addCurve(to: CGPoint(x: -45.45, y: 7.66), controlPoint1: CGPoint(x: -44.68, y: 11.45), controlPoint2: CGPoint(x: -45.12, y: 9.58))
        bezier4Path.addCurve(to: CGPoint(x: -51.03, y: 7.48), controlPoint1: CGPoint(x: -46.93, y: 8.03), controlPoint2: CGPoint(x: -49.04, y: 8.19))
        bezier4Path.addCurve(to: CGPoint(x: -60.27, y: 3.03), controlPoint1: CGPoint(x: -54.67, y: 6.19), controlPoint2: CGPoint(x: -57.3, y: 5.28))
        bezier4Path.addLine(to: CGPoint(x: -60.29, y: 0.58))
        bezier4Path.addCurve(to: CGPoint(x: -50.74, y: -4.51), controlPoint1: CGPoint(x: -57.12, y: -1.7), controlPoint2: CGPoint(x: -53.45, y: -3.69))
        bezier4Path.addCurve(to: CGPoint(x: -45.87, y: -4.78), controlPoint1: CGPoint(x: -49.39, y: -4.92), controlPoint2: CGPoint(x: -47.58, y: -5.02))
        bezier4Path.addCurve(to: CGPoint(x: -44.98, y: -10.29), controlPoint1: CGPoint(x: -45.68, y: -6.65), controlPoint2: CGPoint(x: -45.38, y: -8.49))
        bezier4Path.addCurve(to: CGPoint(x: -50.05, y: -12.58), controlPoint1: CGPoint(x: -46.49, y: -10.51), controlPoint2: CGPoint(x: -48.49, y: -11.17))
        bezier4Path.addCurve(to: CGPoint(x: -56.91, y: -20.22), controlPoint1: CGPoint(x: -52.93, y: -15.16), controlPoint2: CGPoint(x: -55.01, y: -17))
        bezier4Path.addLine(to: CGPoint(x: -56, y: -22.49))
        bezier4Path.addCurve(to: CGPoint(x: -45.24, y: -23.56), controlPoint1: CGPoint(x: -52.21, y: -23.39), controlPoint2: CGPoint(x: -48.06, y: -23.83))
        bezier4Path.addCurve(to: CGPoint(x: -40.63, y: -21.95), controlPoint1: CGPoint(x: -43.84, y: -23.42), controlPoint2: CGPoint(x: -42.12, y: -22.82))
        bezier4Path.addCurve(to: CGPoint(x: -37.59, y: -26.87), controlPoint1: CGPoint(x: -39.72, y: -23.65), controlPoint2: CGPoint(x: -38.7, y: -25.3))
        bezier4Path.addCurve(to: CGPoint(x: -41.41, y: -30.95), controlPoint1: CGPoint(x: -38.9, y: -27.66), controlPoint2: CGPoint(x: -40.5, y: -29.04))
        bezier4Path.addCurve(to: CGPoint(x: -44.81, y: -40.64), controlPoint1: CGPoint(x: -43.08, y: -34.44), controlPoint2: CGPoint(x: -44.29, y: -36.94))
        bezier4Path.addLine(to: CGPoint(x: -43.11, y: -42.39))
        bezier4Path.addCurve(to: CGPoint(x: -32.76, y: -39.23), controlPoint1: CGPoint(x: -39.26, y: -41.76), controlPoint2: CGPoint(x: -35.26, y: -40.57))
        bezier4Path.addCurve(to: CGPoint(x: -29.1, y: -35.94), controlPoint1: CGPoint(x: -31.51, y: -38.56), controlPoint2: CGPoint(x: -30.15, y: -37.33))
        bezier4Path.addCurve(to: CGPoint(x: -24.35, y: -39.35), controlPoint1: CGPoint(x: -27.59, y: -37.18), controlPoint2: CGPoint(x: -26.01, y: -38.32))
        bezier4Path.addCurve(to: CGPoint(x: -26.32, y: -44.62), controlPoint1: CGPoint(x: -25.26, y: -40.59), controlPoint2: CGPoint(x: -26.22, y: -42.49))
        bezier4Path.addCurve(to: CGPoint(x: -25.73, y: -54.88), controlPoint1: CGPoint(x: -26.52, y: -48.49), controlPoint2: CGPoint(x: -26.68, y: -51.27))
        bezier4Path.addLine(to: CGPoint(x: -23.49, y: -55.84))
        bezier4Path.addCurve(to: CGPoint(x: -15.16, y: -48.92), controlPoint1: CGPoint(x: -20.18, y: -53.76), controlPoint2: CGPoint(x: -16.95, y: -51.12))
        bezier4Path.addCurve(to: CGPoint(x: -13.04, y: -44.44), controlPoint1: CGPoint(x: -14.26, y: -47.81), controlPoint2: CGPoint(x: -13.47, y: -46.14))
        bezier4Path.addCurve(to: CGPoint(x: -7.57, y: -45.69), controlPoint1: CGPoint(x: -11.26, y: -44.97), controlPoint2: CGPoint(x: -9.43, y: -45.39))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 25.99, y: 26.98))
        bezier4Path.addCurve(to: CGPoint(x: 27.24, y: 20.33), controlPoint1: CGPoint(x: 27, y: 25.55), controlPoint2: CGPoint(x: 29.45, y: 21.66))
        bezier4Path.addLine(to: CGPoint(x: 4.51, y: 7.18))
        bezier4Path.addCurve(to: CGPoint(x: 0.12, y: 8.41), controlPoint1: CGPoint(x: 3.23, y: 7.96), controlPoint2: CGPoint(x: 1.72, y: 8.41))
        bezier4Path.addCurve(to: CGPoint(x: -4.28, y: 7.18), controlPoint1: CGPoint(x: -1.49, y: 8.41), controlPoint2: CGPoint(x: -3, y: 7.96))
        bezier4Path.addLine(to: CGPoint(x: -27.01, y: 20.34))
        bezier4Path.addCurve(to: CGPoint(x: -25.76, y: 26.99), controlPoint1: CGPoint(x: -29.22, y: 21.67), controlPoint2: CGPoint(x: -26.77, y: 25.56))
        bezier4Path.addCurve(to: CGPoint(x: 0.12, y: 37.43), controlPoint1: CGPoint(x: -19.04, y: 33.45), controlPoint2: CGPoint(x: -9.92, y: 37.43))
        bezier4Path.addCurve(to: CGPoint(x: 25.99, y: 26.98), controlPoint1: CGPoint(x: 10.15, y: 37.43), controlPoint2: CGPoint(x: 19.28, y: 33.45))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: -36.19, y: 8.91))
        bezier4Path.addCurve(to: CGPoint(x: -36.16, y: 8.78), controlPoint1: CGPoint(x: -36.17, y: 8.82), controlPoint2: CGPoint(x: -36.16, y: 8.78))
        bezier4Path.addCurve(to: CGPoint(x: -30.77, y: 13.8), controlPoint1: CGPoint(x: -36.16, y: 8.78), controlPoint2: CGPoint(x: -33.56, y: 15.35))
        bezier4Path.addLine(to: CGPoint(x: -8.29, y: 0.78))
        bezier4Path.addCurve(to: CGPoint(x: -8.33, y: -0.06), controlPoint1: CGPoint(x: -8.32, y: 0.5), controlPoint2: CGPoint(x: -8.33, y: 0.22))
        bezier4Path.addCurve(to: CGPoint(x: -3.65, y: -7.65), controlPoint1: CGPoint(x: -8.33, y: -3.38), controlPoint2: CGPoint(x: -6.43, y: -6.26))
        bezier4Path.addLine(to: CGPoint(x: -3.65, y: -33.79))
        bezier4Path.addCurve(to: CGPoint(x: -10.68, y: -35.95), controlPoint1: CGPoint(x: -3.7, y: -36.98), controlPoint2: CGPoint(x: -10.68, y: -35.95))
        bezier4Path.addCurve(to: CGPoint(x: -10.65, y: -35.97), controlPoint1: CGPoint(x: -10.68, y: -35.95), controlPoint2: CGPoint(x: -10.67, y: -35.96))
        bezier4Path.addCurve(to: CGPoint(x: -37.27, y: -0.06), controlPoint1: CGPoint(x: -26.04, y: -31.33), controlPoint2: CGPoint(x: -37.27, y: -17))
        bezier4Path.addCurve(to: CGPoint(x: -36.19, y: 8.91), controlPoint1: CGPoint(x: -37.27, y: 3.03), controlPoint2: CGPoint(x: -36.89, y: 6.03))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 10.88, y: -35.97))
        bezier4Path.addCurve(to: CGPoint(x: 10.91, y: -35.95), controlPoint1: CGPoint(x: 10.9, y: -35.96), controlPoint2: CGPoint(x: 10.91, y: -35.95))
        bezier4Path.addCurve(to: CGPoint(x: 3.88, y: -33.79), controlPoint1: CGPoint(x: 10.91, y: -35.95), controlPoint2: CGPoint(x: 3.93, y: -36.98))
        bezier4Path.addLine(to: CGPoint(x: 3.88, y: -7.65))
        bezier4Path.addCurve(to: CGPoint(x: 8.57, y: -0.06), controlPoint1: CGPoint(x: 6.66, y: -6.26), controlPoint2: CGPoint(x: 8.57, y: -3.38))
        bezier4Path.addCurve(to: CGPoint(x: 8.52, y: 0.78), controlPoint1: CGPoint(x: 8.57, y: 0.22), controlPoint2: CGPoint(x: 8.55, y: 0.5))
        bezier4Path.addLine(to: CGPoint(x: 31.01, y: 13.79))
        bezier4Path.addCurve(to: CGPoint(x: 36.39, y: 8.77), controlPoint1: CGPoint(x: 33.79, y: 15.34), controlPoint2: CGPoint(x: 36.39, y: 8.77))
        bezier4Path.addCurve(to: CGPoint(x: 36.42, y: 8.9), controlPoint1: CGPoint(x: 36.39, y: 8.77), controlPoint2: CGPoint(x: 36.4, y: 8.81))
        bezier4Path.addCurve(to: CGPoint(x: 37.5, y: -0.06), controlPoint1: CGPoint(x: 37.13, y: 6.03), controlPoint2: CGPoint(x: 37.5, y: 3.03))
        bezier4Path.addCurve(to: CGPoint(x: 10.88, y: -35.97), controlPoint1: CGPoint(x: 37.5, y: -17), controlPoint2: CGPoint(x: 26.27, y: -31.33))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 0.12, y: -2.29))
        bezier4Path.addCurve(to: CGPoint(x: 2.34, y: -0.06), controlPoint1: CGPoint(x: 1.35, y: -2.29), controlPoint2: CGPoint(x: 2.34, y: -1.29))
        bezier4Path.addCurve(to: CGPoint(x: 0.12, y: 2.17), controlPoint1: CGPoint(x: 2.34, y: 1.17), controlPoint2: CGPoint(x: 1.35, y: 2.17))
        bezier4Path.addCurve(to: CGPoint(x: -2.11, y: -0.06), controlPoint1: CGPoint(x: -1.11, y: 2.17), controlPoint2: CGPoint(x: -2.11, y: 1.17))
        bezier4Path.addCurve(to: CGPoint(x: 0.12, y: -2.29), controlPoint1: CGPoint(x: -2.11, y: -1.29), controlPoint2: CGPoint(x: -1.11, y: -2.29))
        bezier4Path.close()
        progressBarColor.setFill()
        bezier4Path.fill()
        progressBarColor.setStroke()
        bezier4Path.lineWidth = 0.5
        bezier4Path.lineCapStyle = .round
        bezier4Path.lineJoinStyle = .round
        bezier4Path.stroke()

        context.restoreGState()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: 37.02, y: 39.27)
        context.rotate(by: -gear1Rotation * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: -2.49, y: -33.46))
        bezier2Path.addCurve(to: CGPoint(x: 3.07, y: -24.18), controlPoint1: CGPoint(x: -2.5, y: -33.47), controlPoint2: CGPoint(x: 3.02, y: -28.06))
        bezier2Path.addCurve(to: CGPoint(x: 2.24, y: -18.71), controlPoint1: CGPoint(x: 3.09, y: -22.77), controlPoint2: CGPoint(x: 2.57, y: -20.17))
        bezier2Path.addCurve(to: CGPoint(x: 8.37, y: -16.87), controlPoint1: CGPoint(x: 4.37, y: -18.45), controlPoint2: CGPoint(x: 6.44, y: -17.83))
        bezier2Path.addCurve(to: CGPoint(x: 11.63, y: -22.88), controlPoint1: CGPoint(x: 8.86, y: -18.34), controlPoint2: CGPoint(x: 10.05, y: -21.52))
        bezier2Path.addCurve(to: CGPoint(x: 20.66, y: -26.7), controlPoint1: CGPoint(x: 14.71, y: -25.57), controlPoint2: CGPoint(x: 20.66, y: -26.7))
        bezier2Path.addLine(to: CGPoint(x: 22.07, y: -25.28))
        bezier2Path.addCurve(to: CGPoint(x: 19.37, y: -14.8), controlPoint1: CGPoint(x: 22.07, y: -25.28), controlPoint2: CGPoint(x: 22.09, y: -17.55))
        bezier2Path.addCurve(to: CGPoint(x: 14.9, y: -11.55), controlPoint1: CGPoint(x: 18.38, y: -13.79), controlPoint2: CGPoint(x: 16.16, y: -12.34))
        bezier2Path.addCurve(to: CGPoint(x: 16.03, y: -9.92), controlPoint1: CGPoint(x: 15.3, y: -11.03), controlPoint2: CGPoint(x: 15.68, y: -10.49))
        bezier2Path.addCurve(to: CGPoint(x: 17.86, y: -6.1), controlPoint1: CGPoint(x: 16.8, y: -8.7), controlPoint2: CGPoint(x: 17.41, y: -7.42))
        bezier2Path.addCurve(to: CGPoint(x: 24.37, y: -8.06), controlPoint1: CGPoint(x: 19.27, y: -6.81), controlPoint2: CGPoint(x: 22.31, y: -8.19))
        bezier2Path.addCurve(to: CGPoint(x: 33.47, y: -4.41), controlPoint1: CGPoint(x: 28.45, y: -7.79), controlPoint2: CGPoint(x: 33.47, y: -4.41))
        bezier2Path.addLine(to: CGPoint(x: 33.47, y: -2.41))
        bezier2Path.addCurve(to: CGPoint(x: 24.17, y: 3.14), controlPoint1: CGPoint(x: 33.47, y: -2.41), controlPoint2: CGPoint(x: 28.05, y: 3.1))
        bezier2Path.addCurve(to: CGPoint(x: 18.79, y: 2.31), controlPoint1: CGPoint(x: 22.78, y: 3.15), controlPoint2: CGPoint(x: 20.27, y: 2.64))
        bezier2Path.addCurve(to: CGPoint(x: 17.09, y: 8.3), controlPoint1: CGPoint(x: 18.56, y: 4.38), controlPoint2: CGPoint(x: 17.98, y: 6.41))
        bezier2Path.addCurve(to: CGPoint(x: 22.97, y: 11.46), controlPoint1: CGPoint(x: 18.62, y: 8.81), controlPoint2: CGPoint(x: 21.63, y: 9.95))
        bezier2Path.addCurve(to: CGPoint(x: 26.84, y: 20.47), controlPoint1: CGPoint(x: 25.67, y: 14.53), controlPoint2: CGPoint(x: 26.84, y: 20.47))
        bezier2Path.addLine(to: CGPoint(x: 25.44, y: 21.89))
        bezier2Path.addCurve(to: CGPoint(x: 14.94, y: 19.26), controlPoint1: CGPoint(x: 25.44, y: 21.89), controlPoint2: CGPoint(x: 17.71, y: 21.97))
        bezier2Path.addCurve(to: CGPoint(x: 11.78, y: 15.01), controlPoint1: CGPoint(x: 13.97, y: 18.33), controlPoint2: CGPoint(x: 12.6, y: 16.29))
        bezier2Path.addCurve(to: CGPoint(x: 9.98, y: 16.28), controlPoint1: CGPoint(x: 11.21, y: 15.46), controlPoint2: CGPoint(x: 10.61, y: 15.88))
        bezier2Path.addCurve(to: CGPoint(x: 6.26, y: 18.07), controlPoint1: CGPoint(x: 8.79, y: 17.02), controlPoint2: CGPoint(x: 7.54, y: 17.62))
        bezier2Path.addCurve(to: CGPoint(x: 8.12, y: 24.35), controlPoint1: CGPoint(x: 7, y: 19.56), controlPoint2: CGPoint(x: 8.24, y: 22.39))
        bezier2Path.addCurve(to: CGPoint(x: 4.49, y: 33.46), controlPoint1: CGPoint(x: 7.87, y: 28.43), controlPoint2: CGPoint(x: 4.49, y: 33.46))
        bezier2Path.addLine(to: CGPoint(x: 2.5, y: 33.47))
        bezier2Path.addCurve(to: CGPoint(x: -3.07, y: 24.18), controlPoint1: CGPoint(x: 2.5, y: 33.47), controlPoint2: CGPoint(x: -3.02, y: 28.06))
        bezier2Path.addCurve(to: CGPoint(x: -2.31, y: 19.03), controlPoint1: CGPoint(x: -3.09, y: 22.86), controlPoint2: CGPoint(x: -2.64, y: 20.52))
        bezier2Path.addCurve(to: CGPoint(x: -8.49, y: 17.21), controlPoint1: CGPoint(x: -4.45, y: 18.78), controlPoint2: CGPoint(x: -6.54, y: 18.16))
        bezier2Path.addCurve(to: CGPoint(x: -11.63, y: 22.88), controlPoint1: CGPoint(x: -9.03, y: 18.79), controlPoint2: CGPoint(x: -10.17, y: 21.61))
        bezier2Path.addCurve(to: CGPoint(x: -20.66, y: 26.7), controlPoint1: CGPoint(x: -14.71, y: 25.57), controlPoint2: CGPoint(x: -20.66, y: 26.7))
        bezier2Path.addLine(to: CGPoint(x: -22.07, y: 25.28))
        bezier2Path.addCurve(to: CGPoint(x: -19.37, y: 14.8), controlPoint1: CGPoint(x: -22.07, y: 25.28), controlPoint2: CGPoint(x: -22.09, y: 17.55))
        bezier2Path.addCurve(to: CGPoint(x: -15.18, y: 11.73), controlPoint1: CGPoint(x: -18.45, y: 13.86), controlPoint2: CGPoint(x: -16.47, y: 12.54))
        bezier2Path.addCurve(to: CGPoint(x: -16.22, y: 10.23), controlPoint1: CGPoint(x: -15.54, y: 11.25), controlPoint2: CGPoint(x: -15.89, y: 10.75))
        bezier2Path.addCurve(to: CGPoint(x: -18.11, y: 6.23), controlPoint1: CGPoint(x: -17.02, y: 8.94), controlPoint2: CGPoint(x: -17.65, y: 7.6))
        bezier2Path.addCurve(to: CGPoint(x: -24.37, y: 8.06), controlPoint1: CGPoint(x: -19.6, y: 6.96), controlPoint2: CGPoint(x: -22.42, y: 8.19))
        bezier2Path.addCurve(to: CGPoint(x: -33.47, y: 4.41), controlPoint1: CGPoint(x: -28.45, y: 7.79), controlPoint2: CGPoint(x: -33.47, y: 4.41))
        bezier2Path.addLine(to: CGPoint(x: -33.47, y: 2.41))
        bezier2Path.addCurve(to: CGPoint(x: -24.17, y: -3.14), controlPoint1: CGPoint(x: -33.47, y: 2.41), controlPoint2: CGPoint(x: -28.05, y: -3.1))
        bezier2Path.addCurve(to: CGPoint(x: -18.94, y: -2.34), controlPoint1: CGPoint(x: -22.83, y: -3.15), controlPoint2: CGPoint(x: -20.42, y: -2.67))
        bezier2Path.addCurve(to: CGPoint(x: -17.12, y: -8.31), controlPoint1: CGPoint(x: -18.66, y: -4.41), controlPoint2: CGPoint(x: -18.05, y: -6.43))
        bezier2Path.addCurve(to: CGPoint(x: -22.97, y: -11.46), controlPoint1: CGPoint(x: -18.66, y: -8.82), controlPoint2: CGPoint(x: -21.64, y: -9.96))
        bezier2Path.addCurve(to: CGPoint(x: -26.84, y: -20.47), controlPoint1: CGPoint(x: -25.67, y: -14.53), controlPoint2: CGPoint(x: -26.84, y: -20.47))
        bezier2Path.addCurve(to: CGPoint(x: -26.58, y: -20.74), controlPoint1: CGPoint(x: -26.84, y: -20.47), controlPoint2: CGPoint(x: -26.73, y: -20.58))
        bezier2Path.addCurve(to: CGPoint(x: -25.44, y: -21.89), controlPoint1: CGPoint(x: -26.17, y: -21.15), controlPoint2: CGPoint(x: -25.44, y: -21.89))
        bezier2Path.addCurve(to: CGPoint(x: -14.94, y: -19.27), controlPoint1: CGPoint(x: -25.44, y: -21.89), controlPoint2: CGPoint(x: -17.71, y: -21.97))
        bezier2Path.addCurve(to: CGPoint(x: -11.71, y: -14.9), controlPoint1: CGPoint(x: -13.94, y: -18.3), controlPoint2: CGPoint(x: -12.52, y: -16.17))
        bezier2Path.addCurve(to: CGPoint(x: -10.17, y: -15.97), controlPoint1: CGPoint(x: -11.22, y: -15.28), controlPoint2: CGPoint(x: -10.7, y: -15.64))
        bezier2Path.addCurve(to: CGPoint(x: -6.16, y: -17.87), controlPoint1: CGPoint(x: -8.88, y: -16.77), controlPoint2: CGPoint(x: -7.54, y: -17.41))
        bezier2Path.addCurve(to: CGPoint(x: -8.12, y: -24.35), controlPoint1: CGPoint(x: -6.87, y: -19.28), controlPoint2: CGPoint(x: -8.25, y: -22.3))
        bezier2Path.addCurve(to: CGPoint(x: -4.49, y: -33.46), controlPoint1: CGPoint(x: -7.87, y: -28.43), controlPoint2: CGPoint(x: -4.49, y: -33.46))
        bezier2Path.addLine(to: CGPoint(x: -2.5, y: -33.47))
        bezier2Path.addLine(to: CGPoint(x: -2.49, y: -33.46))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 0, y: -10))
        bezier2Path.addCurve(to: CGPoint(x: -2.41, y: -9.71), controlPoint1: CGPoint(x: -0.83, y: -10), controlPoint2: CGPoint(x: -1.64, y: -9.9))
        bezier2Path.addCurve(to: CGPoint(x: -10, y: 0), controlPoint1: CGPoint(x: -6.77, y: -8.63), controlPoint2: CGPoint(x: -10, y: -4.69))
        bezier2Path.addCurve(to: CGPoint(x: 0, y: 10), controlPoint1: CGPoint(x: -10, y: 5.52), controlPoint2: CGPoint(x: -5.52, y: 10))
        bezier2Path.addCurve(to: CGPoint(x: 10, y: 0), controlPoint1: CGPoint(x: 5.52, y: 10), controlPoint2: CGPoint(x: 10, y: 5.52))
        bezier2Path.addCurve(to: CGPoint(x: 0, y: -10), controlPoint1: CGPoint(x: 10, y: -5.52), controlPoint2: CGPoint(x: 5.52, y: -10))
        bezier2Path.close()
        progressBarColor.setFill()
        bezier2Path.fill()
        progressBarColor.setStroke()
        bezier2Path.lineWidth = 0.5
        bezier2Path.stroke()

        context.restoreGState()


        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 42.79, y: 138.2)
        context.rotate(by: -(gear1Rotation - 360) * CGFloat.pi/180)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -2.49, y: -33.46))
        bezierPath.addCurve(to: CGPoint(x: 3.07, y: -24.18), controlPoint1: CGPoint(x: -2.5, y: -33.47), controlPoint2: CGPoint(x: 3.02, y: -28.06))
        bezierPath.addCurve(to: CGPoint(x: 2.24, y: -18.71), controlPoint1: CGPoint(x: 3.09, y: -22.77), controlPoint2: CGPoint(x: 2.57, y: -20.17))
        bezierPath.addCurve(to: CGPoint(x: 8.37, y: -16.87), controlPoint1: CGPoint(x: 4.37, y: -18.45), controlPoint2: CGPoint(x: 6.44, y: -17.83))
        bezierPath.addCurve(to: CGPoint(x: 11.63, y: -22.88), controlPoint1: CGPoint(x: 8.86, y: -18.34), controlPoint2: CGPoint(x: 10.05, y: -21.52))
        bezierPath.addCurve(to: CGPoint(x: 20.66, y: -26.7), controlPoint1: CGPoint(x: 14.71, y: -25.57), controlPoint2: CGPoint(x: 20.66, y: -26.7))
        bezierPath.addLine(to: CGPoint(x: 22.07, y: -25.28))
        bezierPath.addCurve(to: CGPoint(x: 19.37, y: -14.8), controlPoint1: CGPoint(x: 22.07, y: -25.28), controlPoint2: CGPoint(x: 22.09, y: -17.55))
        bezierPath.addCurve(to: CGPoint(x: 14.9, y: -11.55), controlPoint1: CGPoint(x: 18.38, y: -13.79), controlPoint2: CGPoint(x: 16.16, y: -12.34))
        bezierPath.addCurve(to: CGPoint(x: 16.03, y: -9.92), controlPoint1: CGPoint(x: 15.3, y: -11.03), controlPoint2: CGPoint(x: 15.68, y: -10.49))
        bezierPath.addCurve(to: CGPoint(x: 17.86, y: -6.1), controlPoint1: CGPoint(x: 16.8, y: -8.7), controlPoint2: CGPoint(x: 17.41, y: -7.42))
        bezierPath.addCurve(to: CGPoint(x: 24.37, y: -8.06), controlPoint1: CGPoint(x: 19.27, y: -6.81), controlPoint2: CGPoint(x: 22.31, y: -8.19))
        bezierPath.addCurve(to: CGPoint(x: 33.47, y: -4.41), controlPoint1: CGPoint(x: 28.45, y: -7.79), controlPoint2: CGPoint(x: 33.47, y: -4.41))
        bezierPath.addLine(to: CGPoint(x: 33.47, y: -2.41))
        bezierPath.addCurve(to: CGPoint(x: 24.17, y: 3.14), controlPoint1: CGPoint(x: 33.47, y: -2.41), controlPoint2: CGPoint(x: 28.05, y: 3.1))
        bezierPath.addCurve(to: CGPoint(x: 18.79, y: 2.31), controlPoint1: CGPoint(x: 22.78, y: 3.15), controlPoint2: CGPoint(x: 20.27, y: 2.64))
        bezierPath.addCurve(to: CGPoint(x: 17.09, y: 8.3), controlPoint1: CGPoint(x: 18.56, y: 4.38), controlPoint2: CGPoint(x: 17.98, y: 6.41))
        bezierPath.addCurve(to: CGPoint(x: 22.97, y: 11.46), controlPoint1: CGPoint(x: 18.62, y: 8.81), controlPoint2: CGPoint(x: 21.63, y: 9.95))
        bezierPath.addCurve(to: CGPoint(x: 26.84, y: 20.47), controlPoint1: CGPoint(x: 25.67, y: 14.53), controlPoint2: CGPoint(x: 26.84, y: 20.47))
        bezierPath.addLine(to: CGPoint(x: 25.44, y: 21.89))
        bezierPath.addCurve(to: CGPoint(x: 14.94, y: 19.26), controlPoint1: CGPoint(x: 25.44, y: 21.89), controlPoint2: CGPoint(x: 17.71, y: 21.97))
        bezierPath.addCurve(to: CGPoint(x: 11.78, y: 15.01), controlPoint1: CGPoint(x: 13.97, y: 18.33), controlPoint2: CGPoint(x: 12.6, y: 16.29))
        bezierPath.addCurve(to: CGPoint(x: 9.98, y: 16.28), controlPoint1: CGPoint(x: 11.21, y: 15.46), controlPoint2: CGPoint(x: 10.61, y: 15.88))
        bezierPath.addCurve(to: CGPoint(x: 6.26, y: 18.07), controlPoint1: CGPoint(x: 8.79, y: 17.02), controlPoint2: CGPoint(x: 7.54, y: 17.62))
        bezierPath.addCurve(to: CGPoint(x: 8.12, y: 24.35), controlPoint1: CGPoint(x: 7, y: 19.56), controlPoint2: CGPoint(x: 8.24, y: 22.39))
        bezierPath.addCurve(to: CGPoint(x: 4.49, y: 33.46), controlPoint1: CGPoint(x: 7.87, y: 28.43), controlPoint2: CGPoint(x: 4.49, y: 33.46))
        bezierPath.addLine(to: CGPoint(x: 2.5, y: 33.47))
        bezierPath.addCurve(to: CGPoint(x: -3.07, y: 24.18), controlPoint1: CGPoint(x: 2.5, y: 33.47), controlPoint2: CGPoint(x: -3.02, y: 28.06))
        bezierPath.addCurve(to: CGPoint(x: -2.31, y: 19.03), controlPoint1: CGPoint(x: -3.09, y: 22.86), controlPoint2: CGPoint(x: -2.64, y: 20.52))
        bezierPath.addCurve(to: CGPoint(x: -8.49, y: 17.21), controlPoint1: CGPoint(x: -4.45, y: 18.78), controlPoint2: CGPoint(x: -6.54, y: 18.16))
        bezierPath.addCurve(to: CGPoint(x: -11.63, y: 22.88), controlPoint1: CGPoint(x: -9.03, y: 18.79), controlPoint2: CGPoint(x: -10.17, y: 21.61))
        bezierPath.addCurve(to: CGPoint(x: -20.66, y: 26.7), controlPoint1: CGPoint(x: -14.71, y: 25.57), controlPoint2: CGPoint(x: -20.66, y: 26.7))
        bezierPath.addLine(to: CGPoint(x: -22.07, y: 25.28))
        bezierPath.addCurve(to: CGPoint(x: -19.37, y: 14.8), controlPoint1: CGPoint(x: -22.07, y: 25.28), controlPoint2: CGPoint(x: -22.09, y: 17.55))
        bezierPath.addCurve(to: CGPoint(x: -15.18, y: 11.73), controlPoint1: CGPoint(x: -18.45, y: 13.86), controlPoint2: CGPoint(x: -16.47, y: 12.54))
        bezierPath.addCurve(to: CGPoint(x: -16.22, y: 10.23), controlPoint1: CGPoint(x: -15.54, y: 11.25), controlPoint2: CGPoint(x: -15.89, y: 10.75))
        bezierPath.addCurve(to: CGPoint(x: -18.11, y: 6.23), controlPoint1: CGPoint(x: -17.02, y: 8.94), controlPoint2: CGPoint(x: -17.65, y: 7.6))
        bezierPath.addCurve(to: CGPoint(x: -24.37, y: 8.06), controlPoint1: CGPoint(x: -19.6, y: 6.96), controlPoint2: CGPoint(x: -22.42, y: 8.19))
        bezierPath.addCurve(to: CGPoint(x: -33.47, y: 4.41), controlPoint1: CGPoint(x: -28.45, y: 7.79), controlPoint2: CGPoint(x: -33.47, y: 4.41))
        bezierPath.addLine(to: CGPoint(x: -33.47, y: 2.41))
        bezierPath.addCurve(to: CGPoint(x: -24.17, y: -3.14), controlPoint1: CGPoint(x: -33.47, y: 2.41), controlPoint2: CGPoint(x: -28.05, y: -3.1))
        bezierPath.addCurve(to: CGPoint(x: -18.94, y: -2.34), controlPoint1: CGPoint(x: -22.83, y: -3.15), controlPoint2: CGPoint(x: -20.42, y: -2.67))
        bezierPath.addCurve(to: CGPoint(x: -17.12, y: -8.31), controlPoint1: CGPoint(x: -18.66, y: -4.41), controlPoint2: CGPoint(x: -18.05, y: -6.43))
        bezierPath.addCurve(to: CGPoint(x: -22.97, y: -11.46), controlPoint1: CGPoint(x: -18.66, y: -8.82), controlPoint2: CGPoint(x: -21.64, y: -9.96))
        bezierPath.addCurve(to: CGPoint(x: -26.84, y: -20.47), controlPoint1: CGPoint(x: -25.67, y: -14.53), controlPoint2: CGPoint(x: -26.84, y: -20.47))
        bezierPath.addCurve(to: CGPoint(x: -26.58, y: -20.74), controlPoint1: CGPoint(x: -26.84, y: -20.47), controlPoint2: CGPoint(x: -26.73, y: -20.58))
        bezierPath.addCurve(to: CGPoint(x: -25.44, y: -21.89), controlPoint1: CGPoint(x: -26.17, y: -21.15), controlPoint2: CGPoint(x: -25.44, y: -21.89))
        bezierPath.addCurve(to: CGPoint(x: -14.94, y: -19.27), controlPoint1: CGPoint(x: -25.44, y: -21.89), controlPoint2: CGPoint(x: -17.71, y: -21.97))
        bezierPath.addCurve(to: CGPoint(x: -11.71, y: -14.9), controlPoint1: CGPoint(x: -13.94, y: -18.3), controlPoint2: CGPoint(x: -12.52, y: -16.17))
        bezierPath.addCurve(to: CGPoint(x: -10.17, y: -15.97), controlPoint1: CGPoint(x: -11.22, y: -15.28), controlPoint2: CGPoint(x: -10.7, y: -15.64))
        bezierPath.addCurve(to: CGPoint(x: -6.16, y: -17.87), controlPoint1: CGPoint(x: -8.88, y: -16.77), controlPoint2: CGPoint(x: -7.54, y: -17.41))
        bezierPath.addCurve(to: CGPoint(x: -8.12, y: -24.35), controlPoint1: CGPoint(x: -6.87, y: -19.28), controlPoint2: CGPoint(x: -8.25, y: -22.3))
        bezierPath.addCurve(to: CGPoint(x: -4.49, y: -33.46), controlPoint1: CGPoint(x: -7.87, y: -28.43), controlPoint2: CGPoint(x: -4.49, y: -33.46))
        bezierPath.addLine(to: CGPoint(x: -2.5, y: -33.47))
        bezierPath.addLine(to: CGPoint(x: -2.49, y: -33.46))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 0, y: -10))
        bezierPath.addCurve(to: CGPoint(x: -2.41, y: -9.71), controlPoint1: CGPoint(x: -0.83, y: -10), controlPoint2: CGPoint(x: -1.64, y: -9.9))
        bezierPath.addCurve(to: CGPoint(x: -10, y: 0), controlPoint1: CGPoint(x: -6.77, y: -8.63), controlPoint2: CGPoint(x: -10, y: -4.69))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 10), controlPoint1: CGPoint(x: -10, y: 5.52), controlPoint2: CGPoint(x: -5.52, y: 10))
        bezierPath.addCurve(to: CGPoint(x: 10, y: 0), controlPoint1: CGPoint(x: 5.52, y: 10), controlPoint2: CGPoint(x: 10, y: 5.52))
        bezierPath.addCurve(to: CGPoint(x: 0, y: -10), controlPoint1: CGPoint(x: 10, y: -5.52), controlPoint2: CGPoint(x: 5.52, y: -10))
        bezierPath.close()
        progressBarColor.setFill()
        bezierPath.fill()
        progressBarColor.setStroke()
        bezierPath.lineWidth = 0.5
        bezierPath.stroke()

        context.restoreGState()
        
        context.restoreGState()

    }




    @objc(ActivityStyleKitResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
